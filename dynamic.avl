#include <stdio.h>

 
int knapsack(int capacity, int weights[], int values[], int n) {
    int dp[n + 1][capacity + 1];   

     
    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;    
            } else if (weights[i - 1] <= w) {
                
                dp[i][w] = (values[i - 1] + dp[i - 1][w - weights[i - 1]] > dp[i - 1][w]) ? 
                           values[i - 1] + dp[i - 1][w - weights[i - 1]] : dp[i - 1][w];
            } else {
                dp[i][w] = dp[i - 1][w];  
            }
        }
    }

  
    return dp[n][capacity];
}

int main() {
    int n, capacity;

    
    printf("Enter the number of items: ");
    scanf("%d", &n);
    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    int weights[n], values[n];

     
    for (int i = 0; i < n; i++) {
        printf("Enter weight and value for item %d: ", i + 1);
        scanf("%d %d", &weights[i], &values[i]);
    }

    
    int maxValue = knapsack(capacity, weights, values, n);
    printf("Maximum value in Knapsack = %d\n", maxValue);

    return 0;
}
