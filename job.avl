#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

 
typedef struct Job {
    int id;        
    int deadline;   
    int profit;     
} Job;
int compare(const void* a, const void* b) {
    Job* job1 = (Job*)a;
    Job* job2 = (Job*)b;
    return job2->profit - job1->profit;    
}

 
void jobSequencing(Job jobs[], int n) {
    
    qsort(jobs, n, sizeof(Job), compare);

     
    int result[n];   
    bool slot[n];    

    
    for (int i = 0; i < n; i++) {
        slot[i] = false;
    }

     
    for (int i = 0; i < n; i++) {
        
        for (int j = (jobs[i].deadline < n ? jobs[i].deadline : n) - 1; j >= 0; j--) {
            if (!slot[j]) {   
                slot[j] = true;   
                result[j] = jobs[i].id;   
                break;
            }
        }
    }

     
    printf("Scheduled jobs are:\n");
    for (int i = 0; i < n; i++) {
        if (slot[i]) {
            printf("Job ID: %d\n", result[i]);
        }
    }
}

int main() {
    int n;

    printf("Enter the number of jobs: ");
    scanf("%d", &n);

    Job* jobs = (Job*)malloc(n * sizeof(Job));   

    
    for (int i = 0; i < n; i++) {
        printf("Enter details for Job %d\n", i + 1);
        printf("Job ID: ");
        scanf("%d", &jobs[i].id);
        printf("Deadline: ");
        scanf("%d", &jobs[i].deadline);
        printf("Profit: ");
        scanf("%d", &jobs[i].profit);
    }

     
    jobSequencing(jobs, n);

    free(jobs);   

    return 0;
}
